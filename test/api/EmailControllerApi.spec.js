/**
 * MailSlurp API
 * Documentation for MailSlurp's public REST API.  ### About [MailSlurp](https://www.mailslurp.com/) is a SAAS API for sending and receiving emails from ephemeral email inboxes. These inboxes can be created on the fly and each has a unique email address.  ### Why MailSlurp was built for **testing software or processes that interact with email in some way**. For more information see the [homepage](https://www.mailslurp.com/).  ### Links  - [Get API Key](https://app.mailslurp.com/) - [API Documentation](https://docs.mailslurp.com/) - [Official SDK Libraries](https://github.com/mailslurp) - [Support](https://www.mailslurp.com/#support) / [Issues](mailto:contact@mailslurp.com) - [Swagger JSON](https://swagger.mailslurp.com/)   ### Use You can call the MailSlurp API from any HTTP client in any language.  Or you use one of the official generated [SDK Libraries](https://github.com/mailslurp).  - [Official Typescript SDK](https://github.com/mailslurp/swagger-sdk-typescript-fetch) - [Official Python SDK](https://github.com/mailslurp/swagger-sdk-python) - [Official C# SDK](https://github.com/mailslurp/swagger-sdk-csharp) - [Official Java SDK](https://github.com/mailslurp/swagger-sdk-java) - [Official Swift SDK](https://github.com/mailslurp/swagger-sdk-swift) - [Official Golang SDK](https://github.com/mailslurp/swagger-sdk-go) - [Official Javascript SDK](https://github.com/mailslurp/swagger-sdk-javascript) - [Official PHP SDK](https://github.com/mailslurp/swagger-sdk-php) - [Official Ruby SDK](https://github.com/mailslurp/swagger-sdk-ruby)   You can also compile your own library with SwaggerCodegen and the [Swagger Spec](https://swagger.mailslurp.com).  Lastly, there is an interactive GUI available at [demo.mailslurp.com](https://demo.mailslurp.com/) for testing requests.  ### Auth An [API Key](#authentication) must be passed as a header in all requests. To get an API Key [sign up](https://app.mailslurp.com/sign-up) and log in to the [MailSlurp Dashboard](https://app.mailslurp.com/) web app.  ### Terms - [Inbox](#/definitions/InboxDto)     - A unique email address     - Unlimited in number     - Can send and receive emails - [Email](#/definitions/Email)     - Belongs to an inbox     - Contains summary and body     - Raw content stored on S3  ### Issues If you encounter issues please [contact the developers](mailto:contact@mailslurp.com) or open a ticket in [GitHub](https://www.github.com/mailslurp). 
 *
 * OpenAPI spec version: 0.0.1-alpha
 * Contact: contact@mailslurp.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MailslurpSwaggerSdk);
  }
}(this, function(expect, MailslurpSwaggerSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MailslurpSwaggerSdk.EmailControllerApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EmailControllerApi', function() {
    describe('deleteMessageUsingDELETE', function() {
      it('should call deleteMessageUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test deleteMessageUsingDELETE
        //instance.deleteMessageUsingDELETE(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMessageAnalyticsUsingGET', function() {
      it('should call getMessageAnalyticsUsingGET successfully', function(done) {
        //uncomment below and update the code to test getMessageAnalyticsUsingGET
        //instance.getMessageAnalyticsUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMessageUsingGET', function() {
      it('should call getMessageUsingGET successfully', function(done) {
        //uncomment below and update the code to test getMessageUsingGET
        //instance.getMessageUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
